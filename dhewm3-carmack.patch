diff -Naur dhewm3-89f227b365c2086dbe8818d82324f074a8ab4792.old/neo/CMakeLists.txt dhewm3-89f227b365c2086dbe8818d82324f074a8ab4792/neo/CMakeLists.txt
--- dhewm3-89f227b365c2086dbe8818d82324f074a8ab4792.old/neo/CMakeLists.txt	2016-01-23 10:16:16.845525612 +0100
+++ dhewm3-89f227b365c2086dbe8818d82324f074a8ab4792/neo/CMakeLists.txt	2016-01-23 10:23:06.175713253 +0100
@@ -39,6 +39,7 @@
 option(DEDICATED	"Build the dedicated server" OFF)
 option(ONATIVE		"Optimize for the host CPU" OFF)
 option(SDL2			"Use SDL2 instead of SDL1.2" ON)
+option(ZFAIL		"Use Carmack's reverse" OFF)
 
 if(NOT CMAKE_SYSTEM_PROCESSOR)
 	message(FATAL_ERROR "No target CPU architecture set")
@@ -752,6 +753,9 @@
 		${src_sys_base}
 		${src_sys_core}
 	)
+	if(ZFAIL)
+		add_definitions( -DDEFY_PATENTS )
+	endif()
 
 	set_target_properties(dhewm3 PROPERTIES COMPILE_DEFINITIONS "__DOOM_DLL__")
 	set_target_properties(dhewm3 PROPERTIES LINK_FLAGS "${ldflags}")
diff -Naur dhewm3-89f227b365c2086dbe8818d82324f074a8ab4792.old/neo/renderer/draw_common.cpp dhewm3-89f227b365c2086dbe8818d82324f074a8ab4792/neo/renderer/draw_common.cpp
--- dhewm3-89f227b365c2086dbe8818d82324f074a8ab4792.old/neo/renderer/draw_common.cpp	2016-01-23 10:16:17.172529795 +0100
+++ dhewm3-89f227b365c2086dbe8818d82324f074a8ab4792/neo/renderer/draw_common.cpp	2016-01-23 10:21:43.729669761 +0100
@@ -1140,6 +1140,7 @@
 		return;
 	}
 
+#ifndef DEFY_PATENTS
 	// patent-free work around
 	if ( !external ) {
 		// "preload" the stencil buffer with the number of volumes
@@ -1151,6 +1152,17 @@
 		GL_Cull( CT_BACK_SIDED );
 		RB_DrawShadowElementsWithCounters( tri, numIndexes );
 	}
+#else
+	// Z-fail, uses stuff described in US6384822 held by Creative Labs in the United States
+	if ( !external ) {
+		qglStencilOp( GL_KEEP, tr.stencilDecr, GL_KEEP );
+		GL_Cull( CT_FRONT_SIDED );
+		RB_DrawShadowElementsWithCounters( tri, numIndexes );
+		qglStencilOp( GL_KEEP, tr.stencilIncr, GL_KEEP );
+		GL_Cull( CT_BACK_SIDED );
+		RB_DrawShadowElementsWithCounters( tri, numIndexes );
+	}
+#endif
 
 	// traditional depth-pass stencil shadows
 	qglStencilOp( GL_KEEP, GL_KEEP, tr.stencilIncr );
